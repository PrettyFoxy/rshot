<p>
  <% unless @prev_link.nil? %>
    <%= link_to 'Prev', @prev_link, :class => "btn" %>
  <% else %>
    <%= link_to 'Prev', "#", :class => "btn disabled" %>
  <% end %>

  <% unless @next_link.nil? %>
    <%= link_to 'Next', @next_link, :class => "btn" %>
  <% else %>
    <%= link_to 'Next', "#", :class => "btn disabled" %>
  <% end %>

  ###

  <%= link_to 'Edit', edit_profile_picture_path(@picture.profile, @picture), :class => "btn" %>
  <%= link_to 'Destroy', profile_picture_path(@picture.profile, @picture), :confirm => 'Are you sure?', :method => :delete, :class => "btn" %>
  <%= link_to 'Back', @back_link, :class => "btn" %><br />
</p>

<p>
  <%= link_to image_tag(@picture.photo.url(:medium), :class => 'detail-image'), @picture.photo.url %>
</p>

<h2><%= @picture.title %></h2>

<% unless @picture.album.nil? %>
<p>
  <b>Album:</b>
  <%= link_to @picture.album.title, profile_album_path(@picture.profile, @picture.album) %>
</p>
<% end %>

<% unless @picture.tags.empty? %>
<p>
  <b>Tags:</b>
  <%= raw @picture.tags.collect{|tag| '<a href="#">'+tag.name+'</a>'}.join(', ') %>
</p>
<% end %>

<div id="picture-exif">
  <h3>EXIF data:</h3>
  <table class="zebra-striped">
    <tbody>
      <tr>
        <th>Camera:</th>
        <td><%= @picture.exifdetails[:model] %></td>
      </tr>
      <tr>
        <th>Taken on:</th>
        <td><%= @picture.exifdetails[:date_time] %></td>
      </tr>
      <tr>
        <th>Exposure time:</th>
        <td><%= (Rational(*(@picture.exifdetails[:exposure_time].split('/').map( &:to_i )))*45).to_f %> s (<%= @picture.exifdetails[:exposure_time] %>)</td>
      </tr>
      <tr>
        <th>Focal length:</th>
        <td><%= @picture.exifdetails[:focal_length] %> mm</td>
      </tr>
      <tr>
        <th>Aperture:</th>
        <td>f/<%= @picture.exifdetails[:aperture] %></td>
      </tr>
      <tr>
        <th>ISO:</th>
        <td><%= @picture.exifdetails[:iso] %></td>
      </tr>
      <tr>
        <th>Exposure bias value:</th>
        <td><%= @picture.exifdetails[:exposure_bias_value] %> EV</td>
      </tr>
      <tr>
        <th>White balance:</th>
        <td>
          <% if @picture.exifdetails[:white_balance] == 0 %>
            Auto white balance
          <% elsif @picture.exifdetails[:white_balance] == 2 %>
            Manual white balance
          <% end %>
        </td>
      </tr>
      <tr>
        <th>Exposure program:</th>
        <td><%= @picture.exifdetails[:exposure_program] %></td>
      </tr>
      <tr>
        <th>Original dimensions:</th>
        <td><%= @picture.exifdetails[:width] %>x<%= @picture.exifdetails[:height] %></td>
      </tr>
      <tr>
        <th>Flash:</th>
        <td>
          <%=
          case @picture.exifdetails[:flash]
            when 0
                'Flash did not fire'
            when 1
                'Flash fired'
            when 5
                'Strobe return light not detected'
            when 7
                'Strobe return light detected'
            when 9
                'Flash fired, compulsory flash mode'
            when 13
                'Flash fired, compulsory flash mode, return light not detected'
            when 15
                'Flash fired, compulsory flash mode, return light detected'
            when 16
                'Flash did not fire, compulsory flash mode'
            when 24
                'Flash did not fire, auto mode'
            when 25
                'Flash fired, auto mode'
            when 29
                'Flash fired, auto mode, return light not detected'
            when 31
                'Flash fired, auto mode, return light detected'
            when 32
                'No flash function'
            when 65
                'Flash fired, red-eye reduction mode'
            when 69
                'Flash fired, red-eye reduction mode, return light not detected'
            when 71
                'Flash fired, red-eye reduction mode, return light detected'
            when 73
                'Flash fired, compulsory flash mode, red-eye reduction mode'
            when 77
                'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected'
            when 79
                'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected'
            when 89
                'Flash fired, auto mode, red-eye reduction mode'
            when 93
                'Flash fired, auto mode, return light not detected, red-eye reduction mode'
            when 95
                'Flash fired, auto mode, return light detected, red-eye reduction mode'
          end
          %>
        </td>
      </tr>
      <tr>
        <th>Software:</th>
        <td><%= @picture.exifdetails[:software] %></td>
      </tr>
      <tr>
        <th>Exposure mode:</th>
        <td>
          <% if @picture.exifdetails[:exposure_mode] == 0 %>
            Auto exposure
          <% elsif @picture.exifdetails[:exposure_mode] == 1 %>
            Manual exposure
          <% elsif @picture.exifdetails[:exposure_mode] == 2 %>
            Auto bracket
          <% end %>
        </td>
      </tr>
      <tr>
        <th>Metering mode:</th>
        <td>
          <%=
          case @picture.exifdetails[:metering_mode]
            when 0
                'Unknown'
            when 1
                'Average'
            when 2
                'CenterWeightedAverage'
            when 3
                'Spot'
            when 4
                'MultiSpot'
            when 5
                'Pattern'
            when 6
                'Partial'
            when 255
                'other'
          end
          %>
        </td>
      </tr>
      <tr>
        <th>Orientation:</th>
        <td><%= @picture.exifdetails[:orientation].to_s %></td>
      </tr>
    </tbody>
  </table>
  <%= @picture.exifdetails[:exif].inspect %>
</div>

<div id="picture-comments">
  <h3>Comments:</h3>
  <% @comments.each do |comment| %>
    <blockquote>
      <%= link_to image_tag(comment.user.profile.avatar.url(:micro), :class => 'profile-image'), comment.user.profile, {:rel => 'popover', :title => "#{comment.user.profile.forename} #{comment.user.profile.surname}", 'data-content' => "<b>#{pluralize(comment.user.profile.pictures.count, 'picture')}</b> yet"} %>
      <p><%= comment.comment %></p>
      <small><%= comment.user.profile.nick %>, <span class="comment-ago" title="<%= comment.created_at %>" rel="twipsy"><%= time_ago_in_words(comment.created_at) %> ago</span></small>
    </blockquote>
  <% end %>
  <% if @comments.empty? %>
    <em>There are no comments at the moment.</em>
  <% end %>

  <% if @comment.errors.any? %>
    <div class="alert-message block-message error fade in" data-alert="alert">
      <a class="close" href="#">&times;</a>
      <h4><%= pluralize(@comment.errors.count, "error") %> prohibited this comment from being saved:</h4>
      <ul>
      <% @comment.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <% if user_signed_in? %>
    <h4>Add a comment</h4>
    <%= form_for [@picture, @comment], :url => { :action => 'create_comment', :controller => 'pictures'} do |f| %>
      <%= image_tag(current_user.profile.avatar.url(:tiny), :class => 'profile-image') %>
      <%= f.text_area :comment, :cols => 20, :rows => 2 %>
      <div><%= f.submit(:class => "btn primary") %></div>
    <% end %>
  <% end %>
</div>

<% if gps = @picture.gps %>
  <h3>Location of the image:</h3>
  <div id="mapdiv" style="width: 500px; height: 200px;"></div>
  <script src="http://www.openlayers.org/api/OpenLayers.js"></script>
  <script>
    map = new OpenLayers.Map("mapdiv");
    map.addLayer(new OpenLayers.Layer.OSM());

    var lonLat = new OpenLayers.LonLat( <%= gps[1] %>, <%= gps[0] %> )
          .transform(
            new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
            map.getProjectionObject() // to Spherical Mercator Projection
          );

    var zoom=16;

    var markers = new OpenLayers.Layer.Markers( "Markers" );
    map.addLayer(markers);

    markers.addMarker(new OpenLayers.Marker(lonLat));

    map.setCenter (lonLat, zoom);
  </script>
<% end %>

<% content_for :sidebar do %>
    <%= render :partial => "profiles/miniview", :locals => { :profile => @picture.profile } %>
    <hr />

    <%= render :partial => "minidetails", :locals => { :picture => @picture } %>
    <hr />

    <% if @viewscope == 'album' %>
        <%= render :partial => "albums/minicontentindex", :locals => { :album => @picture.album } %>
        <hr />
    <% elsif !@picture.album.nil? %>
        This picture appears in the album:<br />
        <%= render :partial => "albums/miniteaser", :locals => { :album => @picture.album } %>
        <hr />
    <% end %>
<% end %>
